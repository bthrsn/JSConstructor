{"id":"index.js","dependencies":[{"name":"E:\\School\\Portfolio\\JSConstructor\\package.json","includedInParent":true,"mtime":1603696211246},{"name":"./model","loc":{"line":1,"column":20},"parent":"E:\\School\\Portfolio\\JSConstructor\\src\\index.js","resolved":"E:\\School\\Portfolio\\JSConstructor\\src\\model.js"},{"name":"./templates","loc":{"line":2,"column":24},"parent":"E:\\School\\Portfolio\\JSConstructor\\src\\index.js","resolved":"E:\\School\\Portfolio\\JSConstructor\\src\\templates.js"},{"name":"./styles/main.css","loc":{"line":3,"column":7},"parent":"E:\\School\\Portfolio\\JSConstructor\\src\\index.js","resolved":"E:\\School\\Portfolio\\JSConstructor\\src\\styles\\main.css"}],"generated":{"js":"\"use strict\";\n\nvar _model = require(\"./model\");\n\nvar _templates = require(\"./templates\");\n\nrequire(\"./styles/main.css\");\n\nvar site = document.querySelector('#site'); // // Для примера - в переменной лежит один из типов значений block\n// const key = 'title';\n// // передаем его в объект templates со всеми функциями\n// console.log(templates[key]);\n\n_model.model.forEach(function (block) {\n  //   Функция принимает параметр block.type и возвращает HTML нужного блока\n  var toHTML = _templates.templates[block.type]; // Проверяем, есть ли ключ в функции toHTML\n\n  if (toHTML) {\n    // и только тогда используем функцию для каждого blocl в model\n    site.insertAdjacentHTML('beforeend', toHTML(block));\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"name":"site","generated":{"line":9,"column":4},"source":"index.js","original":{"line":5,"column":6}},{"generated":{"line":9,"column":8},"source":"index.js","original":{"line":5,"column":10}},{"name":"document","generated":{"line":9,"column":11},"source":"index.js","original":{"line":5,"column":13}},{"generated":{"line":9,"column":19},"source":"index.js","original":{"line":5,"column":21}},{"name":"querySelector","generated":{"line":9,"column":20},"source":"index.js","original":{"line":5,"column":22}},{"generated":{"line":9,"column":33},"source":"index.js","original":{"line":5,"column":13}},{"generated":{"line":9,"column":34},"source":"index.js","original":{"line":5,"column":36}},{"generated":{"line":9,"column":41},"source":"index.js","original":{"line":5,"column":13}},{"generated":{"line":9,"column":42},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":9,"column":44},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"name":"model","generated":{"line":14,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"name":"forEach","generated":{"line":14,"column":13},"source":"index.js","original":{"line":12,"column":6}},{"generated":{"line":14,"column":20},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":14,"column":21},"source":"index.js","original":{"line":12,"column":14}},{"name":"block","generated":{"line":14,"column":31},"source":"index.js","original":{"line":12,"column":14}},{"generated":{"line":14,"column":36},"source":"index.js","original":{"line":12,"column":19}},{"generated":{"line":14,"column":38},"source":"index.js","original":{"line":12,"column":23}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":13,"column":4}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":14,"column":4}},{"name":"toHTML","generated":{"line":16,"column":6},"source":"index.js","original":{"line":14,"column":10}},{"generated":{"line":16,"column":12},"source":"index.js","original":{"line":14,"column":16}},{"name":"templates","generated":{"line":16,"column":15},"source":"index.js","original":{"line":14,"column":19}},{"name":"block","generated":{"line":16,"column":36},"source":"index.js","original":{"line":14,"column":29}},{"generated":{"line":16,"column":41},"source":"index.js","original":{"line":14,"column":34}},{"name":"type","generated":{"line":16,"column":42},"source":"index.js","original":{"line":14,"column":35}},{"generated":{"line":16,"column":46},"source":"index.js","original":{"line":14,"column":19}},{"generated":{"line":16,"column":47},"source":"index.js","original":{"line":14,"column":4}},{"generated":{"line":16,"column":48},"source":"index.js","original":{"line":12,"column":23}},{"generated":{"line":16,"column":49},"source":"index.js","original":{"line":16,"column":4}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":17,"column":4}},{"name":"toHTML","generated":{"line":18,"column":6},"source":"index.js","original":{"line":17,"column":8}},{"generated":{"line":18,"column":12},"source":"index.js","original":{"line":17,"column":4}},{"generated":{"line":18,"column":14},"source":"index.js","original":{"line":17,"column":16}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":18,"column":8}},{"name":"site","generated":{"line":20,"column":0},"source":"index.js","original":{"line":19,"column":8}},{"name":"site","generated":{"line":20,"column":4},"source":"index.js","original":{"line":19,"column":8}},{"generated":{"line":20,"column":8},"source":"index.js","original":{"line":19,"column":12}},{"name":"insertAdjacentHTML","generated":{"line":20,"column":9},"source":"index.js","original":{"line":19,"column":13}},{"generated":{"line":20,"column":27},"source":"index.js","original":{"line":19,"column":8}},{"generated":{"line":20,"column":28},"source":"index.js","original":{"line":19,"column":32}},{"generated":{"line":20,"column":39},"source":"index.js","original":{"line":19,"column":8}},{"name":"toHTML","generated":{"line":20,"column":41},"source":"index.js","original":{"line":19,"column":45}},{"generated":{"line":20,"column":47},"source":"index.js","original":{"line":19,"column":51}},{"name":"block","generated":{"line":20,"column":48},"source":"index.js","original":{"line":19,"column":52}},{"generated":{"line":20,"column":53},"source":"index.js","original":{"line":19,"column":51}},{"generated":{"line":20,"column":54},"source":"index.js","original":{"line":19,"column":8}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":20,"column":5}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":21,"column":1}},{"generated":{"line":22,"column":1},"source":"index.js","original":{"line":12,"column":0}}],"sources":{"index.js":"import {model} from './model';\r\nimport {templates} from './templates';\r\nimport './styles/main.css';\r\n\r\nconst site = document.querySelector('#site');\r\n\r\n// // Для примера - в переменной лежит один из типов значений block\r\n// const key = 'title';\r\n// // передаем его в объект templates со всеми функциями\r\n// console.log(templates[key]);\r\n\r\nmodel.forEach(block => { \r\n    //   Функция принимает параметр block.type и возвращает HTML нужного блока\r\n    const toHTML = templates[block.type];\r\n    \r\n    // Проверяем, есть ли ключ в функции toHTML\r\n    if (toHTML) {\r\n        // и только тогда используем функцию для каждого blocl в model\r\n        site.insertAdjacentHTML('beforeend', toHTML(block));\r\n    }\r\n});\r\n\r\n"},"lineCount":null}},"error":null,"hash":"6feeabb64602233c111cc8c8362f9954","cacheData":{"env":{}}}